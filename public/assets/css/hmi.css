html, body {
  background:black;
  margin: 0;
  padding: 0;
  overflow: hidden;
  height: 100%;
  width: 100%;
}
body {
  margin: auto;
  max-width: 768px;
  max-height: 1024px;
  background: #1E2F3F;
  color: white;
  font-family: arial;
}
main {
  overflow: hidden;
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
}
main>.info,
main>form {
  flex: 1 0;
  display: flex;
  flex-direction: column;
  overflow: auto;
  overflow-x: hidden;
  height: 100%;
  width: 100%;
}
.prop.cmd>label {
  cursor: pointer;
  flex: 1 0 auto;
}
.props {
  gap: 2px;
  background: black;
  display: flex;
  flex-direction: column;
}
.prop {
  background: #1E2F3F;
}
.props.State>.prop>span,
.props.Output>.prop>span,
.props.Input>.prop>span,
.prop.cmd>label::before {
  content: '';
  display: inline-block;
  width: 30px;
  height: 30px;
  border: solid 2px #768797;
  border-radius: 6px;
  background-color: gray;
  vertical-align: middle;
  margin-right: 10px;
  flex: 0 0 30px;
}
.props.Input>.prop>span,
.props.Output>.prop>span,
.props.State>.prop>span {
  border-radius: 20px;
}
.props.Input>.prop[value="1"]>span,
.props.Output>.prop[value="1"]>span,
.props.State>.prop[value="1"]>span,
.prop.cmd>input:checked + label::before {
  background-color:green;
}
.prop.cmd>input[type='checkbox'] {
  display: none;
}
.form-element {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  background-color: #fff;
  border: 1px solid #ccc;
  padding: 5px 9px;
  border-radius: 6px;
  font-size: 16px;
  line-height: 1.5;
  color: #333;
  max-width: 100px;
  /* flex: 0 0 300px; */
  box-sizing: border-box;
}

.form-element:focus {
  outline: none;
  border-color: #007aff;
  box-shadow: 0 0 0 3px rgba(0, 122, 255, 0.2);
}

select.form-element {
  background-image: url("data:image/svg+xml;charset=US-ASCII,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='%23999' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 10px center;
  background-size: 8px 10px;
  padding-right: 30px;
}
.p-io {
  text-align: right;
  flex: 0 0 60px;
  padding: 0 5px;
  border-right: solid 2px black;
}
.props.Command, 
.props.Info, 
.props.State {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}
.props.Command>.prop,
.props.Info>.prop,
.props.State>.prop {
  flex: 1 1 46%;
  max-width: 47%;
}
.props.Info>.prop>span {
  margin-left: auto;
}
.prop.axis>div {
  flex: 1 1 20%;
  text-align: right;
}
.prop.axis>div:nth-child(1) {
  flex: 1 0 50%;
  text-align: left;
}

form summary {
  flex: 0 0 30px;
  display: flex;
  line-height: 30px;
  font-size: 1.2em;
  background: #999;
  color: black;
  text-transform: capitalize;
  padding: 0 10px;
  position: sticky;
  top: 0;
}
form summary summary {
  top: 30px;
}

form .prop {
  display: flex;
  flex: 0 0 30px;
  line-height: 30px;
  font-size: 1.2em;
  padding: 2px 10px;
  /* padding */
  /* padding: 5px; */
}


form .prop input[type='number'] {
  text-align: right;
}
.io {
  display: flex;
  line-height: 36px;
  font-size: 1.4em;
}
.io>i {
  display: inline-block;
  width: 16px;
  height: 16px;
  border-radius: 10px;
  /* flex: 0 0 px; */
  margin: 10px 10px 10px 0;
  border: solid 2px black;
}
.io[type='D']>i {
  background: darkgreen;
}
.io[state='1']>i {
  background: lightgreen;
}

.io[dir='O']>i {
  border-color: white;
  cursor: pointer;
}
.io>div {
  flex: auto;
}
.io>div:nth-child(2) {
  flex: 0 0 60px;
  white-space: nowrap;
  padding-right: 10px;
  text-align: right;
}
.io[safety='S']>div:nth-child(2) {
  background: green;
}
.io>div:nth-child(3) {
  flex: 0 0 160px;
  white-space: nowrap;
  padding-right: 10px;
}
nav {
  display: flex;
}
nav.bar {
  height: 80px;
}
nav.btns {
  flex: 0 0 40px;
  gap: 10px;
}
nav.bar.sub {
  height: 60px;
}
nav.bar>button {
  flex: 0 1 120px;
  text-transform: uppercase;
  font-size: 1em;
  background-color: #A6AA00;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: contain;
}
nav.btns>button {
  flex: 1 0 60px;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: contain;
  border-radius: 10px;
  background-color: inherit;
  box-shadow:
    inset 0 4px 4px rgba(255, 255, 255, 0.5),   /* alleen boven licht */
    inset 0 -4px 4px rgba(0, 0, 0, 0.2);       /* alleen onder donker */
}
nav.bar>.title {
  flex: 1 0 300px;
  line-height: 40px;
  padding: 10px;
  font-size: 1.4em;
}
button.tool {
  background-image: url(icon/i-tool.png);
}
button.back {
  background-image: url(icon/i-back.png);
}
button.check {
  background-image: url(icon/i-check.png);
}
button.del {
  background-image: url(icon/i-del.png);
}
button.doc {
  background-image: url(icon/i-doc.png);
}
button.filter {
  background-image: url(icon/i-filter.png);
}
button.help {
  background-image: url(icon/i-help.png);
}
button.list {
  background-image: url(icon/i-list.png);
}
button.open {
  background-image: url(icon/i-open.png);
}
button.sel {
  background-image: url(icon/i-sel.png);
}
button.search {
  background-image: url(icon/i-search.png);
}
button.pause {
  background-image: url(icon/i-pause.png);
}
button.home {
  background-image: url(icon/home.png);
}
button.menu {
  background-image: url(icon/menu.png);
}
button.dashboard {
  background-image: url(icon/dashboard.png);
}
button.exit {
  background-image: url(icon/exit.png);
}
button.io {
  background-image: url(icon/io.png);
}
button.info {
  background-image: url(icon/info.png);
}
button.alarms {
  background-image: url(icon/alarms.png);
}
button.recipes {
  background-image: url(icon/map.png);
}
button.setup {
  background-image: url(icon/setup.png);
}
button.setup2 {
  background-image: url(icon/setup.png);
}
button.login {
  background-image: url(icon/login.png);
}
button.tool2 {
  background-image: url(icon/tool2.png);
}
button.packml::after {
  content: 'Pack ML';
}
button.packml2::after {
  content: 'Pack ML';
}
button.euromap::after {
  content: 'Euro Map';
}
button.estop {
  background-image: url(icon/estop.png);
}
button.counters {
  background-image: url(icon/counters.png);
}
button.tools {
  background-image: url(icon/tools.png);
}
button.refresh {
  background-image: url(icon/refresh.png);
}
button.auto {
  background-image: url(icon/auto.png);
}
button.tool {
  background-image: url(icon/i-tool.png);
}
.alarms {
  white-space: nowrap;
  flex: 1 1 0;
  overflow: hidden auto;
}
.alarms>div {
  line-height: 30px;
  border-bottom: solid 1px rgba(180,180,180,0.3);
  display: flex;
}
.alarms>div>div {
  border-left: solid 1px  rgba(0,0,0,0.3);
  padding: 5px;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: contain;
}
.alarms>div>.type::before {
  /* background-image: url(icon/i-warn.png); */
  content:'';
  display:inline-block;
  width:20px;
  height:20px;
  border:solid 1px gray;
  border-radius: 20px;
  background:orange;
}
.alarms>div[type='alert']>.type::before {
  background-color:red;
}
.alarms>div[active='1']>.type::before {
  animation: blinkAnimation 1s infinite;
}
.alarms>div>.state {
  background-image: url(icon/i-msg.png);
}
/* .alarms>div>:nth-child(1) {
  flex: 0 0 50px;
} */
.alarms>div>:nth-child(2) {
  flex: 0 0 50px;
}
.alarms>div>:nth-child(3) {
  flex: 0 0 150px;
}
.alarms>div>:nth-child(4) {
  flex: 0 0 50px;
}
.alarms>div>:nth-child(5) {
  flex: 0 0 50px;
}
.alarms>div>:nth-child(6) {
  flex: 0 0 50px;
}
.alarms.small>div:not([active="1"]) {
  display: none;
}
div.image {
  height: 500px;
  background-repeat: no-repeat;
  background-size: contain;
  position: relative; 
}
div.image>i.alarm {
  display:inline-block;
  width: 20px;
  height: 20px;
  border: solid 1px gray;
  border-radius: 20px;
  background: orange;
  position: absolute;
}
div.image>i.alarm[type='alert'] {
  background-color:red;
}
div.image>i.alarm[active='1'] {
  animation: blinkAnimation 1s infinite;
}

@keyframes blinkAnimation {
  0%   { opacity: 1; }
  50%  { opacity: 0; }
  100% { opacity: 1; }
}

